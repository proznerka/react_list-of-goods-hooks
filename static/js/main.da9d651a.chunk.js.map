{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortBy","goodsFromServer","App","goods","useState","isVisible","setIsVisible","isReversed","setIsReversed","default","isSortedBy","setIsSortedBy","name","sort","g1","g2","localeCompare","length","reverse","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAgBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,qBAAAA,I,eAAAA,I,oBAAAA,M,KAME,IAAME,EAAgB,WAC3B,IAAIC,EAAK,UAAOF,GAEhB,EAAkCG,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAoCJ,mBAASJ,EAAOS,SAApD,mBAAOC,EAAP,KAAmBC,EAAnB,KAEA,OAAQD,GACN,KAAKV,EAAOY,KACVT,EAAMU,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGE,cAAcD,MACzC,MAEF,KAAKf,EAAOiB,OACVd,EAAMU,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGG,OAASF,EAAGE,UACvC,MAEF,QACEd,EAAK,YAAOA,GAOhB,OAJII,GACFJ,EAAMe,UAIN,gCACE,gCACE,wCACEb,GACA,wBACEc,KAAK,SACLC,QAAS,kBAAMd,GAAa,IAF9B,sBASHD,GACC,gCACE,wBACEc,KAAK,SACLC,QAAS,kBAAMZ,GAAeD,IAFhC,qBAOA,wBACEY,KAAK,SACLC,QAAS,kBAAMT,EAAcX,EAAOY,OAFtC,iCAOA,wBACEO,KAAK,SACLC,QAAS,WACPZ,GAAc,GACdG,EAAcX,EAAOS,UAJzB,mBAUA,wBACEU,KAAK,SACLC,QAAS,kBAAMT,EAAcX,EAAOiB,SAFtC,+BASJ,8BACGZ,GACC,6BACGF,EAAMkB,KAAI,SAACC,GAAD,OACT,6BACGA,GADMA,cChGvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.da9d651a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  default,\n  name,\n  length,\n}\n\nexport const App: React.FC = () => {\n  let goods = [...goodsFromServer];\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [isReversed, setIsReversed] = useState(false);\n  const [isSortedBy, setIsSortedBy] = useState(SortBy.default);\n\n  switch (isSortedBy) {\n    case SortBy.name:\n      goods.sort((g1, g2) => (g1.localeCompare(g2)));\n      break;\n\n    case SortBy.length:\n      goods.sort((g1, g2) => (g1.length - g2.length));\n      break;\n\n    default:\n      goods = [...goods];\n  }\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div>\n      <div>\n        <h1>Goods</h1>\n        {!isVisible && (\n          <button\n            type=\"button\"\n            onClick={() => setIsVisible(true)}\n          >\n            Start\n          </button>\n        )}\n      </div>\n\n      {isVisible && (\n        <div>\n          <button\n            type=\"button\"\n            onClick={() => setIsReversed(!isReversed)}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => setIsSortedBy(SortBy.name)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => {\n              setIsReversed(false);\n              setIsSortedBy(SortBy.default);\n            }}\n          >\n            Reset\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => setIsSortedBy(SortBy.length)}\n          >\n            Sort by length\n          </button>\n        </div>\n      )}\n\n      <div>\n        {isVisible && (\n          <ul>\n            {goods.map((good) => (\n              <li key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}